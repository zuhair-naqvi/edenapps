<?php

/**
 * BaseMembers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property enum $level
 * @property string $email
 * @property timestamp $last_login
 * @property Doctrine_Collection $Rosters
 * 
 * @method string              getName()       Returns the current record's "name" value
 * @method enum                getLevel()      Returns the current record's "level" value
 * @method string              getEmail()      Returns the current record's "email" value
 * @method timestamp           getLastLogin()  Returns the current record's "last_login" value
 * @method Doctrine_Collection getRosters()    Returns the current record's "Rosters" collection
 * @method Members             setName()       Sets the current record's "name" value
 * @method Members             setLevel()      Sets the current record's "level" value
 * @method Members             setEmail()      Sets the current record's "email" value
 * @method Members             setLastLogin()  Sets the current record's "last_login" value
 * @method Members             setRosters()    Sets the current record's "Rosters" collection
 * 
 * @package    edenapps
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMembers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('members');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('level', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Bronze',
              1 => 'Silver',
              2 => 'Gold',
              3 => 'Staff',
             ),
             'default' => 'Bronze',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Roster as Rosters', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}